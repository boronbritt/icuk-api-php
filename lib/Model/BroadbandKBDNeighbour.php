<?php
/**
 * BroadbandKBDNeighbour
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API Documentation
 *
 * The ICUK API provides an interface to the reseller control panel which can be used to control the provisioning and configuration of facilities remotely
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * BroadbandKBDNeighbour Class Doc Comment
 *
 * @category Class
 * @description Represents the KBD DP Neighbouring Data subtest
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class BroadbandKBDNeighbour implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'BroadbandKBDNeighbour';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'elements' => 'int',
        'ltst_dly_dlr' => 'string',
        'ltst_wkly_dlr' => 'string',
        'min_wkly_dlr' => 'string',
        'max_wkly_dlr' => 'string',
        'celerity' => 'string',
        'llc' => 'string',
        'capacitance' => 'string',
        'line_length' => 'string',
        'interleaving' => 'string',
        'ltst_db_margin' => 'string',
        'prev_db_margin' => 'string',
        'ltst_ip' => 'string',
        'prev_ip' => 'string',
        'ltst_msr' => 'string',
        'prev_msr' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'elements' => 'int32',
        'ltst_dly_dlr' => null,
        'ltst_wkly_dlr' => null,
        'min_wkly_dlr' => null,
        'max_wkly_dlr' => null,
        'celerity' => null,
        'llc' => null,
        'capacitance' => null,
        'line_length' => null,
        'interleaving' => null,
        'ltst_db_margin' => null,
        'prev_db_margin' => null,
        'ltst_ip' => null,
        'prev_ip' => null,
        'ltst_msr' => null,
        'prev_msr' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'elements' => false,
		'ltst_dly_dlr' => true,
		'ltst_wkly_dlr' => true,
		'min_wkly_dlr' => true,
		'max_wkly_dlr' => true,
		'celerity' => true,
		'llc' => true,
		'capacitance' => true,
		'line_length' => true,
		'interleaving' => true,
		'ltst_db_margin' => true,
		'prev_db_margin' => true,
		'ltst_ip' => true,
		'prev_ip' => true,
		'ltst_msr' => true,
		'prev_msr' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'elements' => 'elements',
        'ltst_dly_dlr' => 'ltst_dly_dlr',
        'ltst_wkly_dlr' => 'ltst_wkly_dlr',
        'min_wkly_dlr' => 'min_wkly_dlr',
        'max_wkly_dlr' => 'max_wkly_dlr',
        'celerity' => 'celerity',
        'llc' => 'llc',
        'capacitance' => 'capacitance',
        'line_length' => 'line_length',
        'interleaving' => 'interleaving',
        'ltst_db_margin' => 'ltst_db_margin',
        'prev_db_margin' => 'prev_db_margin',
        'ltst_ip' => 'ltst_ip',
        'prev_ip' => 'prev_ip',
        'ltst_msr' => 'ltst_msr',
        'prev_msr' => 'prev_msr'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'elements' => 'setElements',
        'ltst_dly_dlr' => 'setLtstDlyDlr',
        'ltst_wkly_dlr' => 'setLtstWklyDlr',
        'min_wkly_dlr' => 'setMinWklyDlr',
        'max_wkly_dlr' => 'setMaxWklyDlr',
        'celerity' => 'setCelerity',
        'llc' => 'setLlc',
        'capacitance' => 'setCapacitance',
        'line_length' => 'setLineLength',
        'interleaving' => 'setInterleaving',
        'ltst_db_margin' => 'setLtstDbMargin',
        'prev_db_margin' => 'setPrevDbMargin',
        'ltst_ip' => 'setLtstIp',
        'prev_ip' => 'setPrevIp',
        'ltst_msr' => 'setLtstMsr',
        'prev_msr' => 'setPrevMsr'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'elements' => 'getElements',
        'ltst_dly_dlr' => 'getLtstDlyDlr',
        'ltst_wkly_dlr' => 'getLtstWklyDlr',
        'min_wkly_dlr' => 'getMinWklyDlr',
        'max_wkly_dlr' => 'getMaxWklyDlr',
        'celerity' => 'getCelerity',
        'llc' => 'getLlc',
        'capacitance' => 'getCapacitance',
        'line_length' => 'getLineLength',
        'interleaving' => 'getInterleaving',
        'ltst_db_margin' => 'getLtstDbMargin',
        'prev_db_margin' => 'getPrevDbMargin',
        'ltst_ip' => 'getLtstIp',
        'prev_ip' => 'getPrevIp',
        'ltst_msr' => 'getLtstMsr',
        'prev_msr' => 'getPrevMsr'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('elements', $data ?? [], null);
        $this->setIfExists('ltst_dly_dlr', $data ?? [], null);
        $this->setIfExists('ltst_wkly_dlr', $data ?? [], null);
        $this->setIfExists('min_wkly_dlr', $data ?? [], null);
        $this->setIfExists('max_wkly_dlr', $data ?? [], null);
        $this->setIfExists('celerity', $data ?? [], null);
        $this->setIfExists('llc', $data ?? [], null);
        $this->setIfExists('capacitance', $data ?? [], null);
        $this->setIfExists('line_length', $data ?? [], null);
        $this->setIfExists('interleaving', $data ?? [], null);
        $this->setIfExists('ltst_db_margin', $data ?? [], null);
        $this->setIfExists('prev_db_margin', $data ?? [], null);
        $this->setIfExists('ltst_ip', $data ?? [], null);
        $this->setIfExists('prev_ip', $data ?? [], null);
        $this->setIfExists('ltst_msr', $data ?? [], null);
        $this->setIfExists('prev_msr', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets elements
     *
     * @return int|null
     */
    public function getElements()
    {
        return $this->container['elements'];
    }

    /**
     * Sets elements
     *
     * @param int|null $elements Number of elements.
     *
     * @return self
     */
    public function setElements($elements)
    {
        if (is_null($elements)) {
            throw new \InvalidArgumentException('non-nullable elements cannot be null');
        }
        $this->container['elements'] = $elements;

        return $this;
    }

    /**
     * Gets ltst_dly_dlr
     *
     * @return string|null
     */
    public function getLtstDlyDlr()
    {
        return $this->container['ltst_dly_dlr'];
    }

    /**
     * Sets ltst_dly_dlr
     *
     * @param string|null $ltst_dly_dlr Latest Daily DLR.
     *
     * @return self
     */
    public function setLtstDlyDlr($ltst_dly_dlr)
    {
        if (is_null($ltst_dly_dlr)) {
            array_push($this->openAPINullablesSetToNull, 'ltst_dly_dlr');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ltst_dly_dlr', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['ltst_dly_dlr'] = $ltst_dly_dlr;

        return $this;
    }

    /**
     * Gets ltst_wkly_dlr
     *
     * @return string|null
     */
    public function getLtstWklyDlr()
    {
        return $this->container['ltst_wkly_dlr'];
    }

    /**
     * Sets ltst_wkly_dlr
     *
     * @param string|null $ltst_wkly_dlr Latest of Weekly Non-Zero Minumum DLR.
     *
     * @return self
     */
    public function setLtstWklyDlr($ltst_wkly_dlr)
    {
        if (is_null($ltst_wkly_dlr)) {
            array_push($this->openAPINullablesSetToNull, 'ltst_wkly_dlr');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ltst_wkly_dlr', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['ltst_wkly_dlr'] = $ltst_wkly_dlr;

        return $this;
    }

    /**
     * Gets min_wkly_dlr
     *
     * @return string|null
     */
    public function getMinWklyDlr()
    {
        return $this->container['min_wkly_dlr'];
    }

    /**
     * Sets min_wkly_dlr
     *
     * @param string|null $min_wkly_dlr Minimum of Weekly Non-Zero Minumum DLR.
     *
     * @return self
     */
    public function setMinWklyDlr($min_wkly_dlr)
    {
        if (is_null($min_wkly_dlr)) {
            array_push($this->openAPINullablesSetToNull, 'min_wkly_dlr');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('min_wkly_dlr', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['min_wkly_dlr'] = $min_wkly_dlr;

        return $this;
    }

    /**
     * Gets max_wkly_dlr
     *
     * @return string|null
     */
    public function getMaxWklyDlr()
    {
        return $this->container['max_wkly_dlr'];
    }

    /**
     * Sets max_wkly_dlr
     *
     * @param string|null $max_wkly_dlr Maximum of Weekly Non-Zero Minumum DLR.
     *
     * @return self
     */
    public function setMaxWklyDlr($max_wkly_dlr)
    {
        if (is_null($max_wkly_dlr)) {
            array_push($this->openAPINullablesSetToNull, 'max_wkly_dlr');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('max_wkly_dlr', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['max_wkly_dlr'] = $max_wkly_dlr;

        return $this;
    }

    /**
     * Gets celerity
     *
     * @return string|null
     */
    public function getCelerity()
    {
        return $this->container['celerity'];
    }

    /**
     * Sets celerity
     *
     * @param string|null $celerity Celerity Loss.
     *
     * @return self
     */
    public function setCelerity($celerity)
    {
        if (is_null($celerity)) {
            array_push($this->openAPINullablesSetToNull, 'celerity');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('celerity', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['celerity'] = $celerity;

        return $this;
    }

    /**
     * Gets llc
     *
     * @return string|null
     */
    public function getLlc()
    {
        return $this->container['llc'];
    }

    /**
     * Sets llc
     *
     * @param string|null $llc Line Loss Calculator.
     *
     * @return self
     */
    public function setLlc($llc)
    {
        if (is_null($llc)) {
            array_push($this->openAPINullablesSetToNull, 'llc');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('llc', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['llc'] = $llc;

        return $this;
    }

    /**
     * Gets capacitance
     *
     * @return string|null
     */
    public function getCapacitance()
    {
        return $this->container['capacitance'];
    }

    /**
     * Sets capacitance
     *
     * @param string|null $capacitance Capacitance.
     *
     * @return self
     */
    public function setCapacitance($capacitance)
    {
        if (is_null($capacitance)) {
            array_push($this->openAPINullablesSetToNull, 'capacitance');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('capacitance', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['capacitance'] = $capacitance;

        return $this;
    }

    /**
     * Gets line_length
     *
     * @return string|null
     */
    public function getLineLength()
    {
        return $this->container['line_length'];
    }

    /**
     * Sets line_length
     *
     * @param string|null $line_length Line Length.
     *
     * @return self
     */
    public function setLineLength($line_length)
    {
        if (is_null($line_length)) {
            array_push($this->openAPINullablesSetToNull, 'line_length');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('line_length', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['line_length'] = $line_length;

        return $this;
    }

    /**
     * Gets interleaving
     *
     * @return string|null
     */
    public function getInterleaving()
    {
        return $this->container['interleaving'];
    }

    /**
     * Sets interleaving
     *
     * @param string|null $interleaving Interleaving.
     *
     * @return self
     */
    public function setInterleaving($interleaving)
    {
        if (is_null($interleaving)) {
            array_push($this->openAPINullablesSetToNull, 'interleaving');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('interleaving', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['interleaving'] = $interleaving;

        return $this;
    }

    /**
     * Gets ltst_db_margin
     *
     * @return string|null
     */
    public function getLtstDbMargin()
    {
        return $this->container['ltst_db_margin'];
    }

    /**
     * Sets ltst_db_margin
     *
     * @param string|null $ltst_db_margin Latest DB Margin.
     *
     * @return self
     */
    public function setLtstDbMargin($ltst_db_margin)
    {
        if (is_null($ltst_db_margin)) {
            array_push($this->openAPINullablesSetToNull, 'ltst_db_margin');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ltst_db_margin', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['ltst_db_margin'] = $ltst_db_margin;

        return $this;
    }

    /**
     * Gets prev_db_margin
     *
     * @return string|null
     */
    public function getPrevDbMargin()
    {
        return $this->container['prev_db_margin'];
    }

    /**
     * Sets prev_db_margin
     *
     * @param string|null $prev_db_margin Previous DB Margin.
     *
     * @return self
     */
    public function setPrevDbMargin($prev_db_margin)
    {
        if (is_null($prev_db_margin)) {
            array_push($this->openAPINullablesSetToNull, 'prev_db_margin');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('prev_db_margin', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['prev_db_margin'] = $prev_db_margin;

        return $this;
    }

    /**
     * Gets ltst_ip
     *
     * @return string|null
     */
    public function getLtstIp()
    {
        return $this->container['ltst_ip'];
    }

    /**
     * Sets ltst_ip
     *
     * @param string|null $ltst_ip Latest IP profile.
     *
     * @return self
     */
    public function setLtstIp($ltst_ip)
    {
        if (is_null($ltst_ip)) {
            array_push($this->openAPINullablesSetToNull, 'ltst_ip');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ltst_ip', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['ltst_ip'] = $ltst_ip;

        return $this;
    }

    /**
     * Gets prev_ip
     *
     * @return string|null
     */
    public function getPrevIp()
    {
        return $this->container['prev_ip'];
    }

    /**
     * Sets prev_ip
     *
     * @param string|null $prev_ip Previous IP profile.
     *
     * @return self
     */
    public function setPrevIp($prev_ip)
    {
        if (is_null($prev_ip)) {
            array_push($this->openAPINullablesSetToNull, 'prev_ip');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('prev_ip', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['prev_ip'] = $prev_ip;

        return $this;
    }

    /**
     * Gets ltst_msr
     *
     * @return string|null
     */
    public function getLtstMsr()
    {
        return $this->container['ltst_msr'];
    }

    /**
     * Sets ltst_msr
     *
     * @param string|null $ltst_msr Latest MSR.
     *
     * @return self
     */
    public function setLtstMsr($ltst_msr)
    {
        if (is_null($ltst_msr)) {
            array_push($this->openAPINullablesSetToNull, 'ltst_msr');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ltst_msr', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['ltst_msr'] = $ltst_msr;

        return $this;
    }

    /**
     * Gets prev_msr
     *
     * @return string|null
     */
    public function getPrevMsr()
    {
        return $this->container['prev_msr'];
    }

    /**
     * Sets prev_msr
     *
     * @param string|null $prev_msr Previous MSR.
     *
     * @return self
     */
    public function setPrevMsr($prev_msr)
    {
        if (is_null($prev_msr)) {
            array_push($this->openAPINullablesSetToNull, 'prev_msr');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('prev_msr', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['prev_msr'] = $prev_msr;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


