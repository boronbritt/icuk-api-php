<?php
/**
 * BroadbandIPApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API Documentation
 *
 * The ICUK API provides an interface to the reseller control panel which can be used to control the provisioning and configuration of facilities remotely
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * BroadbandIPApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class BroadbandIPApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for broadbandIpRdnsUsernameGet
     *
     * Retrieves the broadband Reverse DNS information of a static, routed and Ipv6 addresses of a broadband user.
     *
     */
    public function testBroadbandIpRdnsUsernameGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for broadbandIpRdnsUsernamePost
     *
     * Assigns a Reverse DNS records to a static or routed IP address.
     *
     */
    public function testBroadbandIpRdnsUsernamePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for broadbandIpRoutedUsernameDelete
     *
     * Removes a routed subnet from a broadband user.
     *
     */
    public function testBroadbandIpRoutedUsernameDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for broadbandIpRoutedUsernamePost
     *
     * Assigns a routed IPv4 address of the supplied size to a broadband user and updates the RIPE database with the  supplied RIPE NIC handle. If the current allocation is dynamic a static IP will also be created.
     *
     */
    public function testBroadbandIpRoutedUsernamePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for broadbandIpStaticUsernameDelete
     *
     * Removes a static IP address and all routed subnets from a broadband user.
     *
     */
    public function testBroadbandIpStaticUsernameDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for broadbandIpStaticUsernamePost
     *
     * Assigns a static IPv4 address to a broadband user.
     *
     */
    public function testBroadbandIpStaticUsernamePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for broadbandIpUsernameGet
     *
     * Retrieves the static, routed and Ipv6 information of a broadband user.
     *
     */
    public function testBroadbandIpUsernameGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for broadbandIpv6UsernameDelete
     *
     * Removes a IPv6 address from a broadband user.
     *
     */
    public function testBroadbandIpv6UsernameDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for broadbandIpv6UsernamePost
     *
     * Assigns a IPv6 address to a broadband user.
     *
     */
    public function testBroadbandIpv6UsernamePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
